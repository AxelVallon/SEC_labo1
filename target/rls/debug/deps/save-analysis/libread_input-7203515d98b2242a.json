{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6","program":"C:\\Users\\axelv\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","read_input","--edition=2018","C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=7203515d98b2242a","-C","extra-filename=-7203515d98b2242a","--out-dir","c:\\Users\\axelv\\projets\\Semestre6\\CAA\\lab01_2022_input_validation\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\axelv\\projets\\Semestre6\\CAA\\lab01_2022_input_validation\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\axelv\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\axelv\\projets\\Semestre6\\CAA\\lab01_2022_input_validation\\target\\rls\\debug\\deps\\libread_input-7203515d98b2242a.rmeta"},"prelude":{"crate_id":{"name":"read_input","disambiguator":[7618445403631944436,0]},"crate_root":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src","external_crates":[{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2135196546772561304,0]}},{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[10100063161427464349,0]}},{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[18166920060419810902,0]}},{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8277429635966420526,0]}},{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1216845600797868778,0]}},{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[4668287356885333314,0]}},{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8817118394831127109,0]}},{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8504866355990175305,0]}},{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[13162136604145443950,0]}},{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12752153024841339346,0]}},{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14912306932249625247,0]}},{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13614144605518827024,0]}},{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[12294374008152043540,0]}}],"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":0,"byte_end":18082,"line_start":1,"line_end":536,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\prelude.rs","byte_start":20010,"byte_end":20015,"line_start":3,"line_end":3,"column_start":27,"column_end":32},"alias_span":null,"name":"input","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\prelude.rs","byte_start":20017,"byte_end":20027,"line_start":3,"line_end":3,"column_start":34,"column_end":44},"alias_span":null,"name":"InputBuild","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\prelude.rs","byte_start":20029,"byte_end":20045,"line_start":3,"line_end":3,"column_start":46,"column_end":62},"alias_span":null,"name":"InputConstraints","value":"","parent":{"krate":0,"index":33}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":0,"byte_end":18082,"line_start":1,"line_end":536,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":33},{"krate":0,"index":44},{"krate":0,"index":90},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":197},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":524},{"krate":0,"index":213},{"krate":0,"index":220},{"krate":0,"index":228},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":264},{"krate":0,"index":270},{"krate":0,"index":304},{"krate":0,"index":306}],"decl_id":null,"docs":" ## How to use","sig":null,"attributes":[{"value":"/ ## How to use","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":0,"byte_end":17,"line_start":1,"line_end":1,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":18,"byte_end":21,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Add","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":22,"byte_end":29,"line_start":3,"line_end":3,"column_start":1,"column_end":8}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":30,"byte_end":41,"line_start":4,"line_end":4,"column_start":1,"column_end":12}},{"value":"/ read_input = \"0.8\"","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":42,"byte_end":64,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":65,"byte_end":72,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ to your `cargo.toml` under `[dependencies]` and add","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":73,"byte_end":128,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":129,"byte_end":140,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"/ use read_input::prelude::*;","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":141,"byte_end":172,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":173,"byte_end":180,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ to your main file.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":181,"byte_end":203,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":204,"byte_end":207,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ---","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":208,"byte_end":215,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":216,"byte_end":219,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ You can get input with.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":220,"byte_end":247,"line_start":15,"line_end":15,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":248,"byte_end":251,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":252,"byte_end":265,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ # use read_input::prelude::*;","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":266,"byte_end":299,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ # type Type = String;","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":300,"byte_end":325,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/ input::<Type>().get();","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":326,"byte_end":352,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":353,"byte_end":360,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":361,"byte_end":364,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Where `Type` is the type you want.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":365,"byte_end":403,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ You can use all types that implement [`std::str::FromStr`].","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":404,"byte_end":467,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/ This currently includes the standard library types [`isize`], [`usize`], [`i8`], [`u8`], [`i16`], [`u16`], [`f32`], [`i32`], [`u32`], [`f64`], [`i64`], [`u64`], [`i128`], [`u128`], [`char`], [`Ipv4Addr`], [`Ipv6Addr`], [`SocketAddrV4`], [`SocketAddrV6`] and [`String`].","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":468,"byte_end":741,"line_start":25,"line_end":25,"column_start":1,"column_end":274}},{"value":"/ Many crates also implement [`std::str::FromStr`] for their types.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":742,"byte_end":811,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":812,"byte_end":815,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`Ipv4Addr`]: std::net::Ipv4Addr","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":816,"byte_end":852,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ [`Ipv6Addr`]: std::net::Ipv6Addr","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":853,"byte_end":889,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/ [`SocketAddrV4`]: std::net::SocketAddrV4","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":890,"byte_end":934,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/ [`SocketAddrV6`]: std::net::SocketAddrV6","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":935,"byte_end":979,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":980,"byte_end":983,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ For example, if you want to assign a valid unsigned 32bit value to a variable called `input`, you could write.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":984,"byte_end":1098,"line_start":33,"line_end":33,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1099,"byte_end":1102,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1103,"byte_end":1116,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ # use read_input::prelude::*;","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1117,"byte_end":1150,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ let input = input::<u32>().get();","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1151,"byte_end":1188,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1189,"byte_end":1196,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1197,"byte_end":1200,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Rust can often work out the type. When this is the case you can skip explicitly stating the type.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1201,"byte_end":1302,"line_start":40,"line_end":40,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1303,"byte_end":1306,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1307,"byte_end":1320,"line_start":42,"line_end":42,"column_start":1,"column_end":14}},{"value":"/ # fn foo() -> String {","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1321,"byte_end":1347,"line_start":43,"line_end":43,"column_start":1,"column_end":27}},{"value":"/ # use read_input::prelude::*;","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1348,"byte_end":1381,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/ input().get()","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1382,"byte_end":1399,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ # }","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1400,"byte_end":1407,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1408,"byte_end":1415,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1416,"byte_end":1419,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The [`input()`] function uses a common pattern called the builder pattern.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1420,"byte_end":1498,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/ Many settings can be use by adding methods between [`input()`] and [`get()`].","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1499,"byte_end":1580,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ Available methods can be found on the [InputBuild] Trait;","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1581,"byte_end":1642,"line_start":51,"line_end":51,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1643,"byte_end":1646,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`input()`]: shortcut::input","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1647,"byte_end":1679,"line_start":53,"line_end":53,"column_start":1,"column_end":33}},{"value":"/ [`get()`]: InputBuilder::get","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1680,"byte_end":1712,"line_start":54,"line_end":54,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1713,"byte_end":1716,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ## How to use with custom type","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1717,"byte_end":1751,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1752,"byte_end":1755,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ To use `read_input` with a custom type you need to implement [`std::str::FromStr`] for that type.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1756,"byte_end":1857,"line_start":58,"line_end":58,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1858,"byte_end":1861,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [Working example](https://github.com/eopb/read_input/blob/master/examples/point_input.rs)","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1862,"byte_end":1955,"line_start":60,"line_end":60,"column_start":1,"column_end":94}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1957,"byte_end":1979,"line_start":62,"line_end":62,"column_start":1,"column_end":23}},{"value":"allow(clippy :: must_use_candidate)","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":1980,"byte_end":2017,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":2106,"byte_end":2147,"line_start":65,"line_end":65,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41}],"decl_id":null,"docs":" Module to be imported in the style `use read_input::prelude::*;` to get the essential functions and traits.\n","sig":null,"attributes":[{"value":"/ Module to be imported in the style `use read_input::prelude::*;` to get the essential functions and traits.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\prelude.rs","byte_start":19871,"byte_end":19982,"line_start":1,"line_end":1,"column_start":1,"column_end":112}}]},{"kind":"Mod","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"shortcut","qualname":"::shortcut","value":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":84},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":85},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":86},{"krate":0,"index":88}],"decl_id":null,"docs":" Collection of functions that make things a little less verbose.","sig":null,"attributes":[{"value":"/ Collection of functions that make things a little less verbose.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":20049,"byte_end":20116,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":20117,"byte_end":20120,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Using `input().get()` can be a little verbose in simple situations.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":20121,"byte_end":20192,"line_start":3,"line_end":3,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":20507,"byte_end":20518,"line_start":11,"line_end":11,"column_start":8,"column_end":19},"name":"valid_input","qualname":"::shortcut::valid_input","value":"pub fn valid_input<T, F>(F) -> T where T: FromStr, F: Fn(&T) -> bool + 'static","parent":null,"children":[],"decl_id":null,"docs":" Shortcut function. Fetches input that is validated with a test function.","sig":null,"attributes":[{"value":"/ Shortcut function. Fetches input that is validated with a test function.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":20316,"byte_end":20392,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":20393,"byte_end":20396,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `valid_input(|x| 4 < *x && *x < 9)` is the same as `input().add_test(|x| 4 < *x && *x < 9).get()`.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":20397,"byte_end":20499,"line_start":10,"line_end":10,"column_start":1,"column_end":103}}]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":20787,"byte_end":20799,"line_start":22,"line_end":22,"column_start":8,"column_end":20},"name":"input_inside","qualname":"::shortcut::input_inside","value":"pub fn input_inside<T, U>(U) -> T where T: FromStr, U: InsideFunc<T>","parent":null,"children":[],"decl_id":null,"docs":" `input_inside(..)` is the same as `input().inside(..).get()`.","sig":null,"attributes":[{"value":"/ `input_inside(..)` is the same as `input().inside(..).get()`.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":20632,"byte_end":20697,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":20698,"byte_end":20701,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Shortcut function. Fetches input that is within a range, array or vector.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":20702,"byte_end":20779,"line_start":21,"line_end":21,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":21034,"byte_end":21046,"line_start":33,"line_end":33,"column_start":8,"column_end":20},"name":"simple_input","qualname":"::shortcut::simple_input","value":"pub fn simple_input<T: FromStr>() -> T","parent":null,"children":[],"decl_id":null,"docs":" `simple_input()` is the same as `input().get()`.","sig":null,"attributes":[{"value":"/ `simple_input()` is the same as `input().get()`.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":20912,"byte_end":20964,"line_start":30,"line_end":30,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":20965,"byte_end":20968,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Fetches input that is valid for whatever type needed.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":20969,"byte_end":21026,"line_start":32,"line_end":32,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":21175,"byte_end":21180,"line_start":38,"line_end":38,"column_start":8,"column_end":13},"name":"input","qualname":"::shortcut::input","value":"pub fn input<T: FromStr>() -> InputBuilder<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of [`InputBuilder`] with generic, minimal settings.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of [`InputBuilder`] with generic, minimal settings.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":21089,"byte_end":21167,"line_start":37,"line_end":37,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":21377,"byte_end":21384,"line_start":43,"line_end":43,"column_start":8,"column_end":15},"name":"input_d","qualname":"::shortcut::input_d","value":"pub fn input_d<T: DefaultBuilderSettings>() -> InputBuilder<T>","parent":null,"children":[],"decl_id":null,"docs":" [input_d] works like [input] but uses the default input settings that are specified by the [DefaultBuilderSettings] trait.\n","sig":null,"attributes":[{"value":"/ [input_d] works like [input] but uses the default input settings that are specified by the [DefaultBuilderSettings] trait.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":21243,"byte_end":21369,"line_start":42,"line_end":42,"column_start":1,"column_end":127}}]},{"kind":"Trait","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":21539,"byte_end":21561,"line_start":48,"line_end":48,"column_start":11,"column_end":33},"name":"DefaultBuilderSettings","qualname":"::shortcut::DefaultBuilderSettings","value":"DefaultBuilderSettings: FromStr","parent":null,"children":[{"krate":0,"index":78}],"decl_id":null,"docs":" Trait for describing specifically tailored input settings for types.\n","sig":null,"attributes":[{"value":"/ Trait for describing specifically tailored input settings for types.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":21456,"byte_end":21528,"line_start":47,"line_end":47,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":21621,"byte_end":21629,"line_start":50,"line_end":50,"column_start":8,"column_end":16},"name":"settings","qualname":"::shortcut::DefaultBuilderSettings::settings","value":"pub fn settings() -> InputBuilder<Self>","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Returns tailored `InputBuilder`.\n","sig":null,"attributes":[{"value":"/ Returns tailored `InputBuilder`.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":21577,"byte_end":21613,"line_start":49,"line_end":49,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":23864,"byte_end":23876,"line_start":124,"line_end":124,"column_start":8,"column_end":20},"name":"with_display","qualname":"::shortcut::with_display","value":"pub fn with_display<T: Display>(&T) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" This function can be used if [`Err`](https://doc.rust-lang.org/std/str/trait.FromStr.html#associatedtype.Err) associated type for the [`FromStr`](https://doc.rust-lang.org/std/str/trait.FromStr.html) implementation for the type you are using implements [`Display`](https://doc.rust-lang.org/std/fmt/trait.Display.html). This can give quick error messages.","sig":null,"attributes":[{"value":"/ This function can be used if [`Err`](https://doc.rust-lang.org/std/str/trait.FromStr.html#associatedtype.Err) associated type for the [`FromStr`](https://doc.rust-lang.org/std/str/trait.FromStr.html) implementation for the type you are using implements [`Display`](https://doc.rust-lang.org/std/fmt/trait.Display.html). This can give quick error messages.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":23199,"byte_end":23558,"line_start":111,"line_end":111,"column_start":1,"column_end":360}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":23559,"byte_end":23562,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":23563,"byte_end":23566,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ It is for use in [InputBuild::err_match] it like this","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":23567,"byte_end":23624,"line_start":114,"line_end":114,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":23625,"byte_end":23628,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":23629,"byte_end":23642,"line_start":116,"line_end":116,"column_start":1,"column_end":14}},{"value":"/ use read_input::shortcut::with_display;","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":23643,"byte_end":23686,"line_start":117,"line_end":117,"column_start":1,"column_end":44}},{"value":"/ # use read_input::prelude::*;","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":23687,"byte_end":23720,"line_start":118,"line_end":118,"column_start":1,"column_end":34}},{"value":"/ let number = input::<i16>()","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":23721,"byte_end":23752,"line_start":119,"line_end":119,"column_start":1,"column_end":32}},{"value":"/     .err_match(with_display)","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":23753,"byte_end":23785,"line_start":120,"line_end":120,"column_start":1,"column_end":33}},{"value":"/     .repeat_msg(\"Please input a number: \")","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":23786,"byte_end":23832,"line_start":121,"line_end":121,"column_start":1,"column_end":47}},{"value":"/     .get();","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":23833,"byte_end":23848,"line_start":122,"line_end":122,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":23849,"byte_end":23856,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":24246,"byte_end":24262,"line_start":134,"line_end":134,"column_start":8,"column_end":24},"name":"with_description","qualname":"::shortcut::with_description","value":"pub fn with_description<T: Error>(&T) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Produces an error message from an error type. Made for use in [InputBuild::err_match]\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.4\", note =\n             \"Deprecated due to the depreciation of `std::error::Error::description`. Please use the `with_display` function instead.\")","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":23957,"byte_end":24127,"line_start":128,"line_end":131,"column_start":1,"column_end":3}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":24128,"byte_end":24148,"line_start":132,"line_end":132,"column_start":1,"column_end":21}},{"value":"/ Produces an error message from an error type. Made for use in [InputBuild::err_match]","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":24149,"byte_end":24238,"line_start":133,"line_end":133,"column_start":1,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\test_generators.rs","byte_start":24644,"byte_end":24654,"line_start":11,"line_end":11,"column_start":11,"column_end":21},"name":"InsideFunc","qualname":"::test_generators::InsideFunc","value":"InsideFunc<T>","parent":null,"children":[{"krate":0,"index":132}],"decl_id":null,"docs":" This trait is used to describe constraints with different types.\n","sig":null,"attributes":[{"value":"/ This trait is used to describe constraints with different types.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\test_generators.rs","byte_start":24565,"byte_end":24633,"line_start":10,"line_end":10,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\test_generators.rs","byte_start":24709,"byte_end":24722,"line_start":13,"line_end":13,"column_start":8,"column_end":21},"name":"contains_func","qualname":"::test_generators::InsideFunc::contains_func","value":"pub fn contains_func(Self) -> Rc<dyn Fn(&T) -> bool>","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Returns constraint as a function.\n","sig":null,"attributes":[{"value":"/ Returns constraint as a function.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\test_generators.rs","byte_start":24664,"byte_end":24701,"line_start":12,"line_end":12,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":2594,"byte_end":2604,"line_start":82,"line_end":82,"column_start":11,"column_end":21},"name":"InputBuild","qualname":"::InputBuild","value":"InputBuild<T: FromStr>","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196}],"decl_id":null,"docs":" Trait implemented by [InputBuilder] and [InputBuilderOnce] to standardize input settings.\n","sig":null,"attributes":[{"value":"/ Trait implemented by [InputBuilder] and [InputBuilderOnce] to standardize input settings.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":2490,"byte_end":2583,"line_start":81,"line_end":81,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3183,"byte_end":3186,"line_start":98,"line_end":98,"column_start":8,"column_end":11},"name":"msg","qualname":"::InputBuild::msg","value":"pub fn msg<impl ToString: ToString>(Self, impl ToString) -> Self","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Changes or adds a prompt message that gets printed once when input if fetched.","sig":null,"attributes":[{"value":"/ Changes or adds a prompt message that gets printed once when input if fetched.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":2623,"byte_end":2705,"line_start":83,"line_end":83,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":2710,"byte_end":2713,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Custom messages are written on the same line as the input cursor.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":2718,"byte_end":2787,"line_start":85,"line_end":85,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":2792,"byte_end":2795,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":2800,"byte_end":2813,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ # use read_input::prelude::*; ","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":2818,"byte_end":2852,"line_start":88,"line_end":88,"column_start":5,"column_end":39}},{"value":"/ let username: String = input().msg(\"Please input your name: \").get();","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":2857,"byte_end":2930,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":2935,"byte_end":2942,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":2947,"byte_end":2950,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ If you wish to fetch input from the next line append a `\\n`.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":2955,"byte_end":3019,"line_start":92,"line_end":92,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3024,"byte_end":3027,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3032,"byte_end":3045,"line_start":94,"line_end":94,"column_start":5,"column_end":18}},{"value":"/ # use read_input::prelude::*; ","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3050,"byte_end":3084,"line_start":95,"line_end":95,"column_start":5,"column_end":39}},{"value":"/ let username: String = input().msg(\"Please input your name:\\n\").get();","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3089,"byte_end":3163,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3168,"byte_end":3175,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3483,"byte_end":3493,"line_start":105,"line_end":105,"column_start":8,"column_end":18},"name":"repeat_msg","qualname":"::InputBuild::repeat_msg","value":"pub fn repeat_msg<impl ToString: ToString>(Self, impl ToString) -> Self","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Changes or adds a prompt message and that is repeated each time input is requested.","sig":null,"attributes":[{"value":"/ Changes or adds a prompt message and that is repeated each time input is requested.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3226,"byte_end":3313,"line_start":99,"line_end":99,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3318,"byte_end":3321,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3326,"byte_end":3339,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/ # use read_input::prelude::*; ","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3344,"byte_end":3378,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/ let username: String = input().repeat_msg(\"Please input your name: \").get();","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3383,"byte_end":3463,"line_start":103,"line_end":103,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3468,"byte_end":3475,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3932,"byte_end":3935,"line_start":117,"line_end":117,"column_start":8,"column_end":11},"name":"err","qualname":"::InputBuild::err","value":"pub fn err<impl ToString: ToString>(Self, impl ToString) -> Self","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Changes fallback error message.","sig":null,"attributes":[{"value":"/ Changes fallback error message.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3533,"byte_end":3568,"line_start":106,"line_end":106,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3573,"byte_end":3576,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ The default error message is \"That value does not pass. Please try again\".","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3581,"byte_end":3659,"line_start":108,"line_end":108,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3664,"byte_end":3667,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3672,"byte_end":3685,"line_start":110,"line_end":110,"column_start":5,"column_end":18}},{"value":"/ # use read_input::prelude::*; ","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3690,"byte_end":3724,"line_start":111,"line_end":111,"column_start":5,"column_end":39}},{"value":"/ let input = input::<u32>()","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3729,"byte_end":3759,"line_start":112,"line_end":112,"column_start":5,"column_end":35}},{"value":"/     .msg(\"Please input a positive number: \")","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3764,"byte_end":3812,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/     .err(\"That does not look like a positive number. Please try again\")","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3817,"byte_end":3892,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/     .get();","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3897,"byte_end":3912,"line_start":115,"line_end":115,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3917,"byte_end":3924,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4352,"byte_end":4360,"line_start":127,"line_end":127,"column_start":8,"column_end":16},"name":"add_test","qualname":"::InputBuild::add_test","value":"pub fn add_test<F: Fn(&T) -> bool + 'static>(Self, F) -> Self","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Adds a validation check on input to ensure the value meets your criteria.","sig":null,"attributes":[{"value":"/ Adds a validation check on input to ensure the value meets your criteria.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":3975,"byte_end":4052,"line_start":118,"line_end":118,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4057,"byte_end":4060,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ If you want an integer that is not 6 you could write.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4065,"byte_end":4122,"line_start":120,"line_end":120,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4127,"byte_end":4130,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4135,"byte_end":4148,"line_start":122,"line_end":122,"column_start":5,"column_end":18}},{"value":"/ # use read_input::prelude::*; ","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4153,"byte_end":4187,"line_start":123,"line_end":123,"column_start":5,"column_end":39}},{"value":"/ let input = input().add_test(|x: &u8| *x != 6).get();","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4192,"byte_end":4249,"line_start":124,"line_end":124,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4254,"byte_end":4261,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ However for this example it would be better to use [InputConstraints::not]","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4266,"byte_end":4344,"line_start":126,"line_end":126,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5174,"byte_end":5186,"line_start":149,"line_end":149,"column_start":8,"column_end":20},"name":"add_err_test","qualname":"::InputBuild::add_err_test","value":"pub fn add_err_test<F, impl ToString: ToString>(Self, F, impl ToString)\n-> Self where F: Fn(&T) -> bool + 'static","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Does the same thing as [InputBuild::err], but with a custom error message printed when the test\n fails.","sig":null,"attributes":[{"value":"/ Does the same thing as [InputBuild::err], but with a custom error message printed when the test","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4418,"byte_end":4517,"line_start":128,"line_end":128,"column_start":5,"column_end":104}},{"value":"/ fails.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4522,"byte_end":4532,"line_start":129,"line_end":129,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4537,"byte_end":4540,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4545,"byte_end":4548,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ If you want a value from 4 to 9 that is not 6 you could write.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4553,"byte_end":4619,"line_start":132,"line_end":132,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4624,"byte_end":4627,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4632,"byte_end":4645,"line_start":134,"line_end":134,"column_start":5,"column_end":18}},{"value":"/ # use read_input::prelude::*; ","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4650,"byte_end":4684,"line_start":135,"line_end":135,"column_start":5,"column_end":39}},{"value":"/ let input = input()","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4689,"byte_end":4712,"line_start":136,"line_end":136,"column_start":5,"column_end":28}},{"value":"/     .msg(\"Please input a number from 4 to 9 that is not 6: \")","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4717,"byte_end":4782,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"/     .inside_err(","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4787,"byte_end":4807,"line_start":138,"line_end":138,"column_start":5,"column_end":25}},{"value":"/         4..=9,","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4812,"byte_end":4830,"line_start":139,"line_end":139,"column_start":5,"column_end":23}},{"value":"/         \"That does not look like a number from 4 to 9. Please try again\"","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4835,"byte_end":4911,"line_start":140,"line_end":140,"column_start":5,"column_end":81}},{"value":"/     )","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4916,"byte_end":4925,"line_start":141,"line_end":141,"column_start":5,"column_end":14}},{"value":"/     .add_err_test(","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4930,"byte_end":4952,"line_start":142,"line_end":142,"column_start":5,"column_end":27}},{"value":"/         |x| *x != 6,","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4957,"byte_end":4981,"line_start":143,"line_end":143,"column_start":5,"column_end":29}},{"value":"/         \"That value is 6! I don't want 6. Please try again\"","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":4986,"byte_end":5049,"line_start":144,"line_end":144,"column_start":5,"column_end":68}},{"value":"/     )","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5054,"byte_end":5063,"line_start":145,"line_end":145,"column_start":5,"column_end":14}},{"value":"/     .err(\"That does not look like a number. Please try again\")","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5068,"byte_end":5134,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/     .get();","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5139,"byte_end":5154,"line_start":147,"line_end":147,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5159,"byte_end":5166,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5452,"byte_end":5463,"line_start":154,"line_end":154,"column_start":8,"column_end":19},"name":"clear_tests","qualname":"::InputBuild::clear_tests","value":"pub fn clear_tests(Self) -> Self","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Removes all validation checks made by [`InputBuild::add_test`], [`InputBuild::add_err_test`],\n [`InputBuild::inside`] and [`InputBuild::inside_err`].\n","sig":null,"attributes":[{"value":"/ Removes all validation checks made by [`InputBuild::add_test`], [`InputBuild::add_err_test`],","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5284,"byte_end":5381,"line_start":152,"line_end":152,"column_start":5,"column_end":102}},{"value":"/ [`InputBuild::inside`] and [`InputBuild::inside_err`].","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5386,"byte_end":5444,"line_start":153,"line_end":153,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7765,"byte_end":7774,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"err_match","qualname":"::InputBuild::err_match","value":"pub fn err_match<F>(Self, F) -> Self where F: Fn(&T::Err) -> Option<String> +\n'static","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Used specify custom error messages that depend on the errors produced by [`FromStr`].","sig":null,"attributes":[{"value":"/ Used specify custom error messages that depend on the errors produced by [`FromStr`].","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5483,"byte_end":5572,"line_start":155,"line_end":155,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5577,"byte_end":5580,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ You can specify custom error messages that depend on the errors produced by [`FromStr`] with [`InputBuild::err_match()`].","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5585,"byte_end":5710,"line_start":157,"line_end":157,"column_start":5,"column_end":130}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5715,"byte_end":5718,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Here is an extract from the [`point_input`](https://github.com/eopb/read_input/blob/master/examples/point_input.rs) example showing this in practice.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5723,"byte_end":5876,"line_start":159,"line_end":159,"column_start":5,"column_end":158}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5881,"byte_end":5884,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5889,"byte_end":5902,"line_start":161,"line_end":161,"column_start":5,"column_end":18}},{"value":"/ # use read_input::prelude::*; ","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5907,"byte_end":5941,"line_start":162,"line_end":162,"column_start":5,"column_end":39}},{"value":"/ let point = input::<Point>()","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5946,"byte_end":5978,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/     .repeat_msg(\"Please input a point in 2D space in the format (x, y): \")","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":5983,"byte_end":6061,"line_start":164,"line_end":164,"column_start":5,"column_end":83}},{"value":"/     .err_match(|e| {","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6066,"byte_end":6090,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/         Some(match e {","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6095,"byte_end":6121,"line_start":166,"line_end":166,"column_start":5,"column_end":31}},{"value":"/             ParsePointError::FailedParse(s) => format!(","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6126,"byte_end":6185,"line_start":167,"line_end":167,"column_start":5,"column_end":64}},{"value":"/                 \"Failed to parse \\\"{}\\\" it is not a number that can be parsed.\",","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6190,"byte_end":6274,"line_start":168,"line_end":168,"column_start":5,"column_end":89}},{"value":"/                 s","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6279,"byte_end":6300,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/             ),","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6305,"byte_end":6323,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/             ParsePointError::Not2Dimensional(num) => {","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6328,"byte_end":6386,"line_start":171,"line_end":171,"column_start":5,"column_end":63}},{"value":"/                 format!(\"What you inputted was {} dimensional.\", num)","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6391,"byte_end":6464,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/             }","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6469,"byte_end":6486,"line_start":173,"line_end":173,"column_start":5,"column_end":22}},{"value":"/             ParsePointError::NonNumeric => \"That contains a invalid character.\".to_string(),","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6491,"byte_end":6587,"line_start":174,"line_end":174,"column_start":5,"column_end":101}},{"value":"/         })","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6592,"byte_end":6606,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/     })","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6611,"byte_end":6621,"line_start":176,"line_end":176,"column_start":5,"column_end":15}},{"value":"/     .get();","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6626,"byte_end":6641,"line_start":177,"line_end":177,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6646,"byte_end":6653,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6658,"byte_end":6661,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ In nightly rust this can also be done with integers with the feature flag `#![feature(int_error_matching)]` shown in the example [`match_num_err`](https://github.com/eopb/read_input/blob/master/examples/match_num_err.rs).","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6666,"byte_end":6891,"line_start":180,"line_end":180,"column_start":5,"column_end":230}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6896,"byte_end":6899,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6904,"byte_end":6917,"line_start":182,"line_end":182,"column_start":5,"column_end":18}},{"value":"/ # use read_input::prelude::*; ","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6922,"byte_end":6956,"line_start":183,"line_end":183,"column_start":5,"column_end":39}},{"value":"/ use core::num::IntErrorKind::*;","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":6961,"byte_end":6996,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/ let input = input::<i16>()","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7001,"byte_end":7031,"line_start":185,"line_end":185,"column_start":5,"column_end":35}},{"value":"/     .err_match(|x| {","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7036,"byte_end":7060,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/         Some(","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7065,"byte_end":7082,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/             match x.kind() {","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7087,"byte_end":7119,"line_start":188,"line_end":188,"column_start":5,"column_end":37}},{"value":"/                 Empty => \"You did not input any value. Try again.\",","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7124,"byte_end":7195,"line_start":189,"line_end":189,"column_start":5,"column_end":76}},{"value":"/                 InvalidDigit => \"You typed an invalid digit. Try again using only numbers.\",","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7200,"byte_end":7296,"line_start":190,"line_end":190,"column_start":5,"column_end":101}},{"value":"/                 Overflow => \"Integer is too large to store. Try again with a smaller number.\",","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7301,"byte_end":7399,"line_start":191,"line_end":191,"column_start":5,"column_end":103}},{"value":"/                 Underflow => \"Integer is too small to store. Try again with a smaller number.\",","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7404,"byte_end":7503,"line_start":192,"line_end":192,"column_start":5,"column_end":104}},{"value":"/                 _ => \"That value did not pass for an unexpected reason.\",","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7508,"byte_end":7585,"line_start":193,"line_end":193,"column_start":5,"column_end":82}},{"value":"/             }","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7590,"byte_end":7607,"line_start":194,"line_end":194,"column_start":5,"column_end":22}},{"value":"/             .to_string(),","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7612,"byte_end":7641,"line_start":195,"line_end":195,"column_start":5,"column_end":34}},{"value":"/         )","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7646,"byte_end":7659,"line_start":196,"line_end":196,"column_start":5,"column_end":18}},{"value":"/     })","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7664,"byte_end":7674,"line_start":197,"line_end":197,"column_start":5,"column_end":15}},{"value":"/     .repeat_msg(\"Please input a number: \")","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7679,"byte_end":7725,"line_start":198,"line_end":198,"column_start":5,"column_end":51}},{"value":"/     .get();","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7730,"byte_end":7745,"line_start":199,"line_end":199,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7750,"byte_end":7757,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8304,"byte_end":8310,"line_start":219,"line_end":219,"column_start":8,"column_end":14},"name":"inside","qualname":"::InputBuild::inside","value":"pub fn inside<U: InsideFunc<T>>(Self, U) -> Self","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Ensures that input is within a range, array or vector.","sig":null,"attributes":[{"value":"/ Ensures that input is within a range, array or vector.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7872,"byte_end":7930,"line_start":204,"line_end":204,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7935,"byte_end":7938,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If you want an integer from 4 to 9 you could write.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":7943,"byte_end":7998,"line_start":206,"line_end":206,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8003,"byte_end":8006,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8011,"byte_end":8024,"line_start":208,"line_end":208,"column_start":5,"column_end":18}},{"value":"/ # use read_input::prelude::*; ","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8029,"byte_end":8063,"line_start":209,"line_end":209,"column_start":5,"column_end":39}},{"value":"/ let input = input().inside([4, 5, 6, 7, 8, 9]).get();","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8068,"byte_end":8125,"line_start":210,"line_end":210,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8130,"byte_end":8137,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8142,"byte_end":8145,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ or alternatively","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8150,"byte_end":8170,"line_start":213,"line_end":213,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8175,"byte_end":8178,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8183,"byte_end":8196,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/ # use read_input::prelude::*; ","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8201,"byte_end":8235,"line_start":216,"line_end":216,"column_start":5,"column_end":39}},{"value":"/ let input = input().inside(4..=9).get();","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8240,"byte_end":8284,"line_start":217,"line_end":217,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8289,"byte_end":8296,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8487,"byte_end":8497,"line_start":222,"line_end":222,"column_start":8,"column_end":18},"name":"inside_err","qualname":"::InputBuild::inside_err","value":"pub fn inside_err<U: InsideFunc<T>,\n                  impl ToString: ToString>(Self, U, impl ToString) -> Self","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Does the same thing as [`InputBuild::inside`], but with a custom error message\n printed when input fails.\n","sig":null,"attributes":[{"value":"/ Does the same thing as [`InputBuild::inside`], but with a custom error message","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8363,"byte_end":8445,"line_start":220,"line_end":220,"column_start":5,"column_end":87}},{"value":"/ printed when input fails.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8450,"byte_end":8479,"line_start":221,"line_end":221,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8665,"byte_end":8682,"line_start":224,"line_end":224,"column_start":8,"column_end":25},"name":"toggle_msg_repeat","qualname":"::InputBuild::toggle_msg_repeat","value":"pub fn toggle_msg_repeat(Self) -> Self","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Toggles whether a prompt message gets printed once or each time input is requested.\n","sig":null,"attributes":[{"value":"/ Toggles whether a prompt message gets printed once or each time input is requested.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8570,"byte_end":8657,"line_start":223,"line_end":223,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8761,"byte_end":8773,"line_start":226,"line_end":226,"column_start":8,"column_end":20},"name":"prompting_on","qualname":"::InputBuild::prompting_on","value":"pub fn prompting_on(Self, RefCell<Box<dyn Write>>) -> Self","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Send prompts to custom writer instead of stdout\n","sig":null,"attributes":[{"value":"/ Send prompts to custom writer instead of stdout","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8702,"byte_end":8753,"line_start":225,"line_end":225,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8885,"byte_end":8904,"line_start":228,"line_end":228,"column_start":8,"column_end":27},"name":"prompting_on_stderr","qualname":"::InputBuild::prompting_on_stderr","value":"pub fn prompting_on_stderr(Self) -> Self","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Send prompts to stderr instead of stdout\n","sig":null,"attributes":[{"value":"/ Send prompts to stderr instead of stdout","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8833,"byte_end":8877,"line_start":227,"line_end":227,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":9007,"byte_end":9023,"line_start":232,"line_end":232,"column_start":11,"column_end":27},"name":"InputConstraints","qualname":"::InputConstraints","value":"InputConstraints<T>: InputBuild<T>","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210}],"decl_id":null,"docs":" A set of validation tests that use `InputBuild::test` under the hood.\n","sig":null,"attributes":[{"value":"/ A set of validation tests that use `InputBuild::test` under the hood.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":8923,"byte_end":8996,"line_start":231,"line_end":231,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":9149,"byte_end":9152,"line_start":238,"line_end":238,"column_start":8,"column_end":11},"name":"min","qualname":"::InputConstraints::min","value":"pub fn min(Self, T) -> Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Sets a minimum input value.\n","sig":null,"attributes":[{"value":"/ Sets a minimum input value.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":9110,"byte_end":9141,"line_start":237,"line_end":237,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":9279,"byte_end":9286,"line_start":242,"line_end":242,"column_start":8,"column_end":15},"name":"min_err","qualname":"::InputConstraints::min_err","value":"pub fn min_err<impl ToString: ToString>(Self, T, impl ToString) -> Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Sets a minimum input value with custom error message.\n","sig":null,"attributes":[{"value":"/ Sets a minimum input value with custom error message.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":9214,"byte_end":9271,"line_start":241,"line_end":241,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":9416,"byte_end":9419,"line_start":246,"line_end":246,"column_start":8,"column_end":11},"name":"max","qualname":"::InputConstraints::max","value":"pub fn max(Self, T) -> Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Sets a maximum input value.\n","sig":null,"attributes":[{"value":"/ Sets a maximum input value.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":9377,"byte_end":9408,"line_start":245,"line_end":245,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":9547,"byte_end":9554,"line_start":250,"line_end":250,"column_start":8,"column_end":15},"name":"max_err","qualname":"::InputConstraints::max_err","value":"pub fn max_err<impl ToString: ToString>(Self, T, impl ToString) -> Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Sets a maximum input value with custom error message.\n","sig":null,"attributes":[{"value":"/ Sets a maximum input value with custom error message.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":9482,"byte_end":9539,"line_start":249,"line_end":249,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":9697,"byte_end":9704,"line_start":254,"line_end":254,"column_start":8,"column_end":15},"name":"min_max","qualname":"::InputConstraints::min_max","value":"pub fn min_max(Self, T, T) -> Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Sets a minimum and maximum input value.\n","sig":null,"attributes":[{"value":"/ Sets a minimum and maximum input value.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":9646,"byte_end":9689,"line_start":253,"line_end":253,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":9855,"byte_end":9866,"line_start":258,"line_end":258,"column_start":8,"column_end":19},"name":"min_max_err","qualname":"::InputConstraints::min_max_err","value":"pub fn min_max_err<impl ToString: ToString>(Self, T, T, impl ToString) -> Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Sets a minimum and maximum input value with custom error message.\n","sig":null,"attributes":[{"value":"/ Sets a minimum and maximum input value with custom error message.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":9778,"byte_end":9847,"line_start":257,"line_end":257,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":10011,"byte_end":10014,"line_start":262,"line_end":262,"column_start":8,"column_end":11},"name":"not","qualname":"::InputConstraints::not","value":"pub fn not(Self, T) -> Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Sets a restricted input value.\n","sig":null,"attributes":[{"value":"/ Sets a restricted input value.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":9969,"byte_end":10003,"line_start":261,"line_end":261,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":10165,"byte_end":10172,"line_start":266,"line_end":266,"column_start":8,"column_end":15},"name":"not_err","qualname":"::InputConstraints::not_err","value":"pub fn not_err<impl ToString: ToString>(Self, T, impl ToString) -> Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Sets a restricted input value with custom error message.\n","sig":null,"attributes":[{"value":"/ Sets a restricted input value with custom error message.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":10097,"byte_end":10157,"line_start":265,"line_end":265,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":10731,"byte_end":10743,"line_start":288,"line_end":288,"column_start":12,"column_end":24},"name":"InputBuilder","qualname":"::InputBuilder","value":"InputBuilder {  }","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219}],"decl_id":null,"docs":" 'builder' used to store the settings that are used to fetch input.","sig":null,"attributes":[{"value":"/ 'builder' used to store the settings that are used to fetch input.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":10488,"byte_end":10558,"line_start":283,"line_end":283,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":10559,"byte_end":10562,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ `.get()` method only takes these settings by reference so can be called multiple times.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":10563,"byte_end":10654,"line_start":285,"line_end":285,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":10655,"byte_end":10658,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ This type does not have support for default input value.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":10659,"byte_end":10719,"line_start":287,"line_end":287,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":11036,"byte_end":11039,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"new","qualname":"<InputBuilder<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `InputBuilder` with default settings.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of `InputBuilder` with default settings.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":10957,"byte_end":11024,"line_start":297,"line_end":297,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":11480,"byte_end":11483,"line_start":313,"line_end":313,"column_start":12,"column_end":15},"name":"get","qualname":"<InputBuilder<T>>::get","value":"pub fn get(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" 'gets' the input form the user.","sig":null,"attributes":[{"value":"/ 'gets' the input form the user.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":11380,"byte_end":11415,"line_start":310,"line_end":310,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":11420,"byte_end":11423,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ Panics if unable to read input line.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":11428,"byte_end":11468,"line_start":312,"line_end":312,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":11693,"byte_end":11700,"line_start":321,"line_end":321,"column_start":12,"column_end":19},"name":"try_get","qualname":"<InputBuilder<T>>::try_get","value":"pub fn try_get(&Self) -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" 'gets' the input form the user.","sig":null,"attributes":[{"value":"/ 'gets' the input form the user.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":11561,"byte_end":11596,"line_start":316,"line_end":316,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":11601,"byte_end":11604,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":11609,"byte_end":11621,"line_start":318,"line_end":318,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":11626,"byte_end":11629,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if unable to read input line.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":11634,"byte_end":11681,"line_start":320,"line_end":320,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":12288,"byte_end":12295,"line_start":339,"line_end":339,"column_start":12,"column_end":19},"name":"default","qualname":"<InputBuilder<T>>::default","value":"pub fn default(Self, T) -> InputBuilderOnce<T>","parent":null,"children":[],"decl_id":null,"docs":" Changes or adds a default input value.","sig":null,"attributes":[{"value":"/ Changes or adds a default input value.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":11944,"byte_end":11986,"line_start":331,"line_end":331,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":11991,"byte_end":11994,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ If the user presses enter before typing anything `.get()` will return a default value when [InputBuilder::default] is used.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":11999,"byte_end":12126,"line_start":333,"line_end":333,"column_start":5,"column_end":132}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":12131,"byte_end":12134,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":12139,"byte_end":12150,"line_start":335,"line_end":335,"column_start":5,"column_end":16}},{"value":"/ # use read_input::prelude::*; ","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":12155,"byte_end":12189,"line_start":336,"line_end":336,"column_start":5,"column_end":39}},{"value":"/ let input = input().msg(\"Please input pi: \").default(3.141).get();","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":12194,"byte_end":12264,"line_start":337,"line_end":337,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":12269,"byte_end":12276,"line_start":338,"line_end":338,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":15195,"byte_end":15211,"line_start":438,"line_end":438,"column_start":12,"column_end":28},"name":"InputBuilderOnce","qualname":"::InputBuilderOnce","value":"InputBuilderOnce {  }","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263}],"decl_id":null,"docs":" 'builder' used to store the settings that are used to fetch input.","sig":null,"attributes":[{"value":"/ 'builder' used to store the settings that are used to fetch input.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":14958,"byte_end":15028,"line_start":433,"line_end":433,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":15029,"byte_end":15032,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ `.get()` method takes ownership of the settings so can be called only once without cloning.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":15033,"byte_end":15128,"line_start":435,"line_end":435,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":15129,"byte_end":15132,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ This type has support for default input value.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":15133,"byte_end":15183,"line_start":437,"line_end":437,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":15426,"byte_end":15429,"line_start":447,"line_end":447,"column_start":12,"column_end":15},"name":"get","qualname":"<InputBuilderOnce<T>>::get","value":"pub fn get(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" 'gets' the input form the user.","sig":null,"attributes":[{"value":"/ 'gets' the input form the user.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":15326,"byte_end":15361,"line_start":444,"line_end":444,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":15366,"byte_end":15369,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Panics if unable to read input line.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":15374,"byte_end":15414,"line_start":446,"line_end":446,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":15638,"byte_end":15645,"line_start":455,"line_end":455,"column_start":12,"column_end":19},"name":"try_get","qualname":"<InputBuilderOnce<T>>::try_get","value":"pub fn try_get(Self) -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" 'gets' the input form the user.","sig":null,"attributes":[{"value":"/ 'gets' the input form the user.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":15506,"byte_end":15541,"line_start":450,"line_end":450,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":15546,"byte_end":15549,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":15554,"byte_end":15566,"line_start":452,"line_end":452,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":15571,"byte_end":15574,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if unable to read input line.","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":15579,"byte_end":15626,"line_start":454,"line_end":454,"column_start":5,"column_end":52}}]}],"impls":[{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\test_generators.rs","byte_start":24806,"byte_end":24809,"line_start":16,"line_end":16,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":10935,"byte_end":10947,"line_start":296,"line_end":296,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":12697,"byte_end":12709,"line_start":352,"line_end":352,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":14492,"byte_end":14504,"line_start":413,"line_end":413,"column_start":65,"column_end":77},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":14541,"byte_end":14553,"line_start":415,"line_end":415,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":14650,"byte_end":14662,"line_start":421,"line_end":421,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":15300,"byte_end":15316,"line_start":443,"line_end":443,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":16264,"byte_end":16280,"line_start":477,"line_end":477,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":17840,"byte_end":17856,"line_start":524,"line_end":524,"column_start":65,"column_end":81},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":17882,"byte_end":17898,"line_start":526,"line_end":526,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":2167,"byte_end":2174,"line_start":68,"line_end":68,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":33}},{"kind":"Mod","span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":2184,"byte_end":2192,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":44}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\shortcut.rs","byte_start":21563,"byte_end":21570,"line_start":48,"line_end":48,"column_start":35,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":12151},"to":{"krate":0,"index":77}},{"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\test_generators.rs","byte_start":24806,"byte_end":24809,"line_start":16,"line_end":16,"column_start":48,"column_end":51},"kind":{"Impl":{"id":16}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":130}},{"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":9028,"byte_end":9038,"line_start":232,"line_end":232,"column_start":32,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":173},"to":{"krate":0,"index":197}},{"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":10935,"byte_end":10947,"line_start":296,"line_end":296,"column_start":18,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":12697,"byte_end":12709,"line_start":352,"line_end":352,"column_start":36,"column_end":48},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":213},"to":{"krate":0,"index":173}},{"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":14492,"byte_end":14504,"line_start":413,"line_end":413,"column_start":65,"column_end":77},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":213},"to":{"krate":0,"index":197}},{"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":14541,"byte_end":14553,"line_start":415,"line_end":415,"column_start":30,"column_end":42},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":213},"to":{"krate":2,"index":2997}},{"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":14650,"byte_end":14662,"line_start":421,"line_end":421,"column_start":36,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":213},"to":{"krate":2,"index":2640}},{"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":15300,"byte_end":15316,"line_start":443,"line_end":443,"column_start":18,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":16264,"byte_end":16280,"line_start":477,"line_end":477,"column_start":36,"column_end":52},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":260},"to":{"krate":0,"index":173}},{"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":17840,"byte_end":17856,"line_start":524,"line_end":524,"column_start":65,"column_end":81},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":260},"to":{"krate":0,"index":197}},{"span":{"file_name":"C:\\Users\\axelv\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\read_input-0.8.6\\src\\lib.rs","byte_start":17882,"byte_end":17898,"line_start":526,"line_end":526,"column_start":19,"column_end":35},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":260},"to":{"krate":2,"index":2640}}]}